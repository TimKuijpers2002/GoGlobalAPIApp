plugins {
	id 'org.springframework.boot' version '2.5.4'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id "org.sonarqube" version "3.3"
}

sonarqube {
	properties {
		property "sonar.projectKey", "TimKuijpers2002_GoGlobalAPIApp"
		property "sonar.organization", "timkuijpers2002"
		property "sonar.host.url", "https://sonarcloud.io"
	}
}

group = 'GoGlobalProject.APIApp'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '15'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	tasks.jar {
		enabled = false
	}
	tasks.withType(Test) {
		scanForTestClasses = false
		include "**/*Test.class" // whatever Ant pattern matches your test class files
	}
}


repositories {
	mavenCentral()
}

test {
	useJUnitPlatform()
	testLogging {
		events "passed", "skipped", "failed"
	}
}

dependencies {
	implementation 'org.hibernate:hibernate-gradle-plugin:5.6.1.Final'
	implementation 'org.springframework.boot:spring-boot-starter-actuator:2.5.6'
	implementation 'org.springframework.boot:spring-boot-starter-web:2.5.6'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.5.6'
	testImplementation(platform('org.junit:junit-bom:5.8.1'))
	testImplementation('org.junit.jupiter:junit-jupiter:5.8.1')
	implementation 'junit:junit:4.13.2'
	compileOnly 'org.projectlombok:lombok:1.18.22'
	annotationProcessor 'org.projectlombok:lombok:1.18.22'
	testImplementation 'org.springframework.boot:spring-boot-starter-test:2.5.6'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest:2.5.6'
	runtimeOnly 'com.microsoft.sqlserver:mssql-jdbc:9.4.0.jre16'
}

test {
	useJUnitPlatform()
}
